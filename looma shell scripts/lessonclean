// ONE TIME program to
//    clean out ft=lesson activities that are not also in lessons collection
//    create activities for lessons that are not also in activities collection
//
//    and to report any lesson timeline items that are not found in activities collection
//              and so will show "File not found"
//
//  run in MONGO SHELL with: load('lessonclean')
//
// THINK before running this - - first get a mongodump from AWS and mongorestore it into --db loomaAWS
//                               or, db.databaseCopy('looma','loomaAWS')
//
//TO SET UP:
//then:           'use looma'
//this sets db to the 'looma'  database

var activitycursor, lessoncursor;

print('db is ' + db);
print('');

var count = 0;
//repeat for 'activities' collection
print ('*****scanning activities for ft=lesson that aren\'t in lessons collection');
activitycursor = db.activities.find({'ft':'lesson'});
while (activitycursor.hasNext()) {
    var doc = activitycursor.next();
    //print ('checking: ' + doc.dn);
    lessoncursor = db.lessons.find({'dn':doc.dn, 'ft':'lesson'});
    if (  ! lessoncursor.hasNext()) {
        print('     found activity wo lesson: ' + doc.dn + ', mongoID ' + doc.mongoID);
        //db.activities.remove(doc);
        count += 1;
        }
    };
 print('');
 print('found ' + count + ' lesson activities wo lessons');
 print('');


count = 0;
//repeat for 'lessons' collection
print ('*****scanning for lessons missing from activities collection');
lessoncursor = db.lessons.find();
while (lessoncursor.hasNext()) {
    var insert = {};
    var doc = lessoncursor.next();
    //print ('checking: ' + doc.dn);
    activitycursor = db.activities.find({'dn':doc.dn, 'ft':'lesson'});
    if (  ! activitycursor.hasNext()) {
        print('     found lesson wo activity: ' + doc.dn);

        insert.mongoID = doc._id;
        insert.ft = 'lesson';
        insert.dn = doc.dn;
        insert.ch_id = doc.ch_id;

        //print ('inserting: ' + insert.dn + ', type: ' + insert.ft  + ', mongoID: ' + insert.mongoID);

        //db.activities.insert(insert);
        count += 1;
        }
    };
 print('');
 print('found ' + count + ' lessons without activities');
 print('');
//
var lessoncount = 0;
var found;

//repeat for 'lessons' collection
print ('*****scanning lesson plans for non-existent elements');
print();

lessoncursor = db.lessons.find();
while (lessoncursor.hasNext()) {
    var lesson = lessoncursor.next();
    found = false;
    print ('checking: ' + lesson.dn);

//print(lesson.data);

    elements = lesson.data;
    for (var i=0; i<elements.length; i++) {
        if (elements[i].collection == 'activities') {
            activitycursor = db.activities.find({'_id':new ObjectId(elements[i].id)});
            if ( ! activitycursor.hasNext()) {
                count++;
                found = true;
                print('      item: ' + elements[i].id + ' not in activities');
            }
        }
    };
    if (found) lessoncount++;
}
 print('');
 print('found ' + count + ' non-existent texts in ' + lessoncount + ' lessons');
 print('');
 print('');
