#!/bin/bash
#
#  filename: loomaUSBer
#       VERSION 3.0 for rysnc.net
#       author: skip
#       date:   JUL 2019
#
#   called from shell script "loomaUSB" which is in /usr/local/bin (must be executable)
#   that script uses "source" command to load this file
#
#  used to update a USB memory stick from the 'archive' version of Looma
#  on RSYNC.NET, including new code, database & content
#
#   loomaUSB can be called with a parameter "dryrun" in which case the transfers are not performed,
#   but 'dry run' instead

# using rsync downloads all changed or more recent files from rsybnc.net to a USB stick

#configured to be run on a LOOMA (linux)

#RSYNC options used:
#-a  "archive" equivalent to -rlptgoD
#   -r  recursive
#   -l  recreate symlink on the destination
#   -p  preserve permissions
#   -t  preserve modification time
#   -g  preserve group
#   -o  preserve owner
#   -D  transfer devices and specials (NA for Looma)

#-v	    verbose
#-vv	very verbose
#-z  	use compression
#--dry-run
#--delete 	delete files on destination that are not on source
#--perms (=== -p)
#--update   skip files if destination  already exists and has a later date
#--include '.ssh'
#--exclude '.[!.]*'
#--progress show transfer progress
#--stats    print stats at the end
#
result () {
    if [[ $1 -ne 0 ]]
    then
        echo "****************************************************************"
        echo "ERROR: previous operation returned $1"
    else
        echo "****************************************************************"
        echo "operation successful"
    fi
}

echo "********************************************************"
echo " Looma - update a USB memory stick"
echo "    copies new or modified files from rsync.net to a USB"
echo "*******************************************************"
echo

   # test internet presence and speed
#    echo "************************************"
#    echo "Testing network connection and speed"
#    echo "************************************"
#    echo
#    t=$(date +%s)
#    sudo wget ftp://speedtest.tele2.net/10MB.zip -O /dev/null
#    r=$?
#    s=$(date +%s)
#    if [[ $r -ne 0 ]]
#    then
#        echo "no internet connection found";exit $r;
#    else
#        echo "****************************************************************"
#        echo -n "Internet speed is MB/s: ";expr 8 \* 10 / $(($s - $t))
#        echo -n  "- - continue at this speed [y/n]?"; read input;
#        if [[ $input != "y" ]]
#        then
#            exit 1
#        fi
#    fi


cd /media/odroid/LOOMA
if [[ `pwd` != '/media/odroid/LOOMA' ]]
    then
        echo
        echo "***********ERROR***********************************"
        echo "  Didnt find USB memory at /media/odroid/LOOMA"
        echo "  Be sure the USB is inserted and its name is LOOMA"
        echo "***************************************************"
        exit 1
    fi

mkdir -p loomaupdate/Looma     #in case its not already there
mkdir -p loomaupdate/content   #in case its not already there

cd loomaupdate

echo
echo "**************************************************"
echo "- preparing to update Looma code on the USB memory"
echo -n  "- - continue [y/n]?"; read input;

RO="58191@usw-s008.rsync.net"

if [[ $input = "y" ]]
then
    SECONDS=0
    if [[ $1 = "dryrun" ]]
    then
        rsync -az --dry-run --delete --stats --update --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../Looma/ Looma
        result $?
    else
        rsync -az           --delete --stats --update --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../Looma/ Looma
        result $?
    fi
    echo "$(($SECONDS / 60)) minutes and $(($SECONDS % 60)) seconds elapsed."
fi

echo
echo "*****************************************************"
echo "- preparing to update Looma content on the USB memory"
echo -n  "- - continue [y/n]?"; read input;

if [[ $input = "y" ]]
then
    SECONDS=0
    if [[ $1 = "dryrun" ]]
    then
        rsync -az --dry-run --delete --stats --update --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../content/ content
        result $?
    else
        rsync -az           --delete --stats --update --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../content/ content
        result $?
    fi
    echo "$(($SECONDS / 60)) minutes and $(($SECONDS % 60)) seconds elapsed."
fi
echo
echo "****************************************************************************"
echo "DONE LOOMA UPDATE: updating USB memory with Looma code, database and content"
echo "****************************************************************************"
echo
